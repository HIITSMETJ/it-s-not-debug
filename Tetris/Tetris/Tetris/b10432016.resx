<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="gg.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAK8AAAFvCAYAAAA8DZt1AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAACX5JREFUeF7t3e2NI0UUhlES4D8JbAAkQAREQABEQAZkQAakQBBkQSymr9iSLkX1
        h4eZ3Xl7zpFK2vV026714+q2d2R/84BQ4iWWeIklXmKJl1jiJZZ4iSVeYomXWOIllniJJV5iiZdY4iWW
        eIklXmKJl1jiJZZ4iSVeYomXWOIllniJJV5iiZdY4iWWeIklXmKJl1jiJZZ4iSVeYomXWOIllniJJV5i
        iZdY4iWWeIklXmKJl1jiJZZ4iSVeYomXWOIllniJJV5iiZdY4iWWeIklXmKJl1jiJZZ4iSVeYomXWOIl
        lniJJV5iiZdY4iWWeIklXmKJl1jiJZZ4iSVeYomXWOIllniJJV5iiZdY4iWWeIklXmKJl1jiJZZ4iSVe
        YomXWOIllniJJV5iiZdY4iWWeIklXmKJl1jiJZZ4iSVeYomXWOIllniJJV5iiZdY4iWWeIklXmKJl1ji
        JZZ4iSVeYomXWOIllniJJV5iiZdY4iWWeIklXmKJl1jiJZZ4iSVeYomXWOIllniJJV5iiZdY4iWWeIkl
        XmKJl1jiJZZ4iSVeYomXWOIllniJJV5iiZdY4iWWeIl1r3h//fXx+OGHx+O777aZbVOr8e23j8f33z8e
        v/zyePzxx+Px6dM/l/3+++edPhs/G/utRl3Pkbr9Z/cpq/1qHj/99N/Lnxk3d48ZXglvHhVH9/PP6+3m
        8eefn3dYqFBX+9T9O9KfbK85bi5/hhVGraSrB+9ozCvi1SdArYZ7VitojR9//LzBwt4+Vt5T2TOsVbCH
        W3+uFbSvdH/99c8pQgXUH9izw/lvv/17+zHqNo7Uba3221uxV0+YmkPXr/PsfvfrubnsGdbqNB6oiuro
        kF76SjafNsz6dVcw/UlSq+WevXhXq+/etuK9JHeGFWp/oOoBPlP71PllhXi0/XzdtQr3lbtWyz17Qdao
        o0BXIa62E+8luTPsL7DOVtFn9euu2EudiozLauy9CDuKt0c5b9dftF2Nd5zv1xj3ZxxdXvvf5B3aZhmq
        H9aPDuMv0U8R6i22oa+Uey/C5ij7il3XO1bffnmF258wV+M92ucD2GYdqodUD+5rmV/990P90c+GOd75
        FKQiW112FOJ8nash3iBn8e69BdVHrYQVUne2uu6tysMcWulHiVplV6uxeJ+2zTrUWbz950ej7zuf166u
        t79jMc6Hu1W8R/GN6MT7tG3Wod5i5e0r4tUx3/Yq3rL3ZBqnHlfjresZjvb5ALZZh+qhrQ7fK3sRlIqo
        nxJcHfOr+r1458tr9NOSl8S7ereh5jH+4+O1X8i+M9sMQ/WV9eh91+4o3isr9d7oq/devKW/HVaj7/eS
        eFee2TbcNsNQ80q5enE1qxV674HtYV25rr59j+0o3vrPjrrdGnOg4n3aNsNgPcbxYNUKOg6hw4hm3naY
        g5vfgVjpsdWTaDiK94h4n7bNMNxLXmTVqPAr6qPz3HkF7ueTz47ab7w4G45+a6zu10vnNoZ4A9RKdRRh
        H/WAjpW5/rzapo9uXlWfHbV/t9rmNYd4Q9SqVqcMtVrNq+P4j4E5HitvtG2GkEm8xBIvscRLLPESS7zE
        Ei+xxEss8RJLvMQSL7HESyzxEku8xBIvscRLLPESS7zEEi+xxEss8RJLvMQSL7HESyzxEku8xBIvscRL
        LPES6z7xjk+JnD+2tP5en8U7f0JjGd/p0LfvY/UpkUcfi1rXdfTzszF/quPRp0jOoz6Fsra/8sHYN7HN
        +gbqo0rn73uYR4U1f/FK/zTyvdH938/nPRtzvKttroyK+APYZhru2S9C6avpnVbeecxfDXBD2yyDzeFW
        PHXZOHSOU4l5VZ5Xptq+/7xW8jPz92HMh+uj75jornyHxJVtVt+7cfNTiG2GoeqB6avm6pPHu/lTxudP
        Se8P/F4g3dm3B33peIc+j5uvvtsMQ/UYK6SjcIf+HcBzBLVyjZ/VOFq15hV//vah8rXi7fM42zbcNsNQ
        fdWdV9E98+nBHOjZajr01W0vkL14R/j9SDG+52J+QTk8E2+/3fnbOW9mm2GgWunGA1TBPaOvvhVS1x/4
        enKsVvN+26vrGPbi7eFffdJdjbe260/qvSfDTWwzDPTMSjTbi6pUrONnNVZhzqcre/rt7I3XiLfuc50q
        zOf0e0++G9lmGeit4i1Hcc5xr/Yf3ireK6PCXZ2H38w200BvGe8cSg+s73u2sn2teOvf4wOEW7bZBnqr
        c95hvICq0V+49fPJoxd0Ze9JUnGNy98i3rP7dSPbbEP1kK5GcPZuwzDeEejbrS47shfvuJ7+bkM9GWs+
        e4f7Hu98pKmf9XdJanyQgLeZhurnpmf/QTEcvc/b1XX1J0fF11fjK6cqe/GunG17FG+p+9vvX40PEPA2
        y1C18vXAzgLusdc4W6377xX027myb/mS8ZZVwN4qe8fmQ3lFVpeNQ3o9oPX3+bB65beu6jr6PmNcPcf+
        0vGW+YhR48Yv3rbZhZsDPhvPHE77acYYdXt7Kp6Ka97nmdHjPfutsrp/89Gmv5jt4+h+h9pmdQP1Jv28
        us6jVqRnD6Pz7zvUdcyxdH2FfOno8a5+Po/VKcz8G281rpynh9lmdRPjFGFe+erv9WAeRXekPynOTjfe
        w8o7zPfDygvvh3iJJV5iiZdY4iWWeIklXmKJl1jiJZZ4iSVeYomXWOIllniJJV5iiZdY4iWWeIklXmKJ
        l1jiJZZ4iSVeYomXWOIllniJJV5iiZdY4iWWeIklXmKJl1jiJZZ4iSVeYomXWOIllniJJV5iiZdY4iWW
        eIklXmKJl1jiJZZ4iSVeYomXWOIllniJJV5iiZdY4iWWeIklXmKJl1jiJZZ4iSVeYomXWOIllniJJV5i
        iZdY4iWWeIklXmKJl1jiJZZ4iSVeYomXWOIllniJJV5iiZdY4iWWeIklXmKJl1jiJZZ4iSVeYomXWOIl
        lniJJV5iiZdY4iWWeIklXmKJl1jiJZZ4iSVeYomXWOIllniJJV5iiZdY4iWWeIklXmKJl1jiJZZ4iSVe
        YomXWOIllniJJV5iiZdY4iWWeIklXmKJl1jiJZZ4iSVeYomXWOIllniJJV5iiZdY4iWWeIklXmKJl1ji
        JZZ4iSVeYomXWOIllniJJV5iiZdY4iWWeIklXmKJl1jiJZZ4iSVeYomXWOIllniJJV5iiZdY4iWWeIkl
        XmKJl1jiJZZ4iSVeYomXWOIllniJJV5iiZdY4iWWeIklXmKJl1jiJdTj8TdJgUuD1+XkIQAAAABJRU5E
        rkJggg==
</value>
  </data>
</root>